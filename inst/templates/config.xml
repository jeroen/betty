<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Render the package documentation website for https://docs.ropensci.org&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.16"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>50</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.30.0">
      <projectUrl>INSERT_GIT_REPO_URL</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>KEEP_CACHE</name>
          <description>Do not automatically flush the package cache on a rebuild.
</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_UNIVERSE</name>
          <description>Update the universe repo.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.2.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>INSERT_GIT_REPO_URL</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>INSERT_BUILD_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.PruneStaleBranch/>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H H * * H
</spec>
    </hudson.triggers.TimerTrigger>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.30.0">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <com.cloudbees.jenkins.GitHubSetCommitStatusBuilder plugin="github@1.30.0">
      <statusMessage>
        <content></content>
      </statusMessage>
      <contextSource class="org.jenkinsci.plugins.github.status.sources.ManuallyEnteredCommitContextSource">
        <context>ropensci/jenkins/pkgdown</context>
      </contextSource>
    </com.cloudbees.jenkins.GitHubSetCommitStatusBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/sh
set -e
echo &quot;Starting pkgdown build!&quot;
echo &quot;&quot;
git log -n1
echo &quot;&quot;
cat DESCRIPTION
BASENAME=$(basename $PWD)
PACKAGE=$(grep &apos;Package:&apos; DESCRIPTION | awk &apos;{print $NF}&apos;)
MASTER=$(git remote show origin | grep &quot;HEAD branch&quot; | sed &apos;s/.*: //&apos;)
DEPLOY_BRANCH=&quot;origin/${MASTER}&quot;
echo &quot;PACKAGE NAME: $PACKAGE&quot;
echo &quot;GIT_BRANCH: $GIT_BRANCH&quot;
echo &quot;DEPLOY_BRANCH: $DEPLOY_BRANCH&quot;
if [ &quot;$GIT_BRANCH&quot; = &quot;$DEPLOY_BRANCH&quot; ]; then
if [ &quot;$UPDATE_UNIVERSE&quot; = &quot;true&quot; ]; then
echo &quot;Updating r-universe...&quot;
docker run --rm --env-file=/var/jenkins_home/ghtoken.txt -v data:/data ropensci/docs universe $GIT_URL $PACKAGE $GIT_COMMIT
echo &quot;Universe is up to date!&quot;
fi
if git log -n1 | grep &quot;flushcache&quot;; then
echo &quot;Flushing the cache!&quot;
docker volume rm ${BASENAME}_cache || true
fi
if [ &quot;$GIT_COMMIT&quot; = &quot;$GIT_PREVIOUS_COMMIT&quot; ] &amp;&amp; [ &quot;$KEEP_CACHE&quot; = &quot;false&quot; ]; then
echo &quot;Fresh rebuild: flushing the cache!&quot;
docker volume rm ${BASENAME}_cache || true
fi
ENABLE_CACHE=&quot;--env R_LIBS_USER=/cache -v ${BASENAME}_cache:/cache&quot;
ENABLE_STORE=&quot;-v data:/data&quot;
else
echo &quot;Using read-only cache from $DEPLOY_BRANCH&quot;
ENABLE_CACHE=&quot;--env R_LIBS_USER=~:/cache -v ${BASENAME}_cache:/cache:ro&quot;
fi
if [ -f &quot;.Renviron&quot; ]; then
ENVVAR_FILE=&quot;--env-file=.Renviron&quot;
fi
docker pull ropensci/docs
ID=$(docker create --rm $ENVVAR_FILE $ENABLE_CACHE $ENABLE_STORE ropensci/docs build &quot;/$BASENAME&quot; &quot;$GIT_URL&quot;)
docker cp $PWD &quot;$ID:/$BASENAME&quot;
docker start $ID --attach
if [ &quot;$GIT_BRANCH&quot; = &quot;$DEPLOY_BRANCH&quot; ]; then
echo &quot;Deploying to https://docs.ropensci.org...&quot;
docker run --rm --env-file=/var/jenkins_home/ghtoken.txt -v data:/data ropensci/docs deploy $PACKAGE
echo &quot;Docs deployment done!&quot;
else
echo &quot;Skipping deployment for non-master branch&quot;
fi
echo &quot;All done!&quot;
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.github.status.GitHubCommitStatusSetter plugin="github@1.30.0">
      <commitShaSource class="org.jenkinsci.plugins.github.status.sources.BuildDataRevisionShaSource"/>
      <reposSource class="org.jenkinsci.plugins.github.status.sources.AnyDefinedRepositorySource"/>
      <contextSource class="org.jenkinsci.plugins.github.status.sources.ManuallyEnteredCommitContextSource">
        <context>ropensci/jenkins/pkgdown</context>
      </contextSource>
      <statusResultSource class="org.jenkinsci.plugins.github.status.sources.DefaultStatusResultSource"/>
      <statusBackrefSource class="org.jenkinsci.plugins.github.status.sources.BuildRefBackrefSource"/>
      <errorHandlers>
        <org.jenkinsci.plugins.github.status.err.ShallowAnyErrorHandler/>
      </errorHandlers>
    </org.jenkinsci.plugins.github.status.GitHubCommitStatusSetter>
  </publishers>
  <buildWrappers/>
</project>
